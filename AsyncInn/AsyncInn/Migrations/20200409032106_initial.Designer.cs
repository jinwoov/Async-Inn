// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20200409032106_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Coffee Maker"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Minibar"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Water View"
                        },
                        new
                        {
                            ID = 4,
                            Name = "King Bed"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Jacuzi Tub"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Seattle",
                            Name = "Seattle",
                            Phone = "(206) 682-7453",
                            State = "WA",
                            StreetAddress = "85 Pike St"
                        },
                        new
                        {
                            ID = 2,
                            City = "Bellevue",
                            Name = "Bellevue",
                            Phone = "(425) 646-3660",
                            State = "WA",
                            StreetAddress = "575 Bellevue Sq"
                        },
                        new
                        {
                            ID = 3,
                            City = "Lynnwood",
                            Name = "Lynnwood",
                            Phone = "(425) 771-1121",
                            State = "WA",
                            StreetAddress = "3000 184th St. SW"
                        },
                        new
                        {
                            ID = 4,
                            City = "Tukwila",
                            Name = "Tukwila",
                            Phone = "(206) 246-0423",
                            State = "WA",
                            StreetAddress = "2800 Southcenter Mall"
                        },
                        new
                        {
                            ID = 5,
                            City = "Federal Way",
                            Name = "Federal Way",
                            Phone = "(253) 275-3303",
                            State = "WA",
                            StreetAddress = "1928-B South Commons"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRooms", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRoom");

                    b.HasData(
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 101,
                            PetFriendly = false,
                            Rate = 80.00m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 102,
                            PetFriendly = true,
                            Rate = 100.00m,
                            RoomID = 2
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 1200,
                            PetFriendly = false,
                            Rate = 200.00m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 1300,
                            PetFriendly = true,
                            Rate = 220.00m,
                            RoomID = 2
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "Capitol Hill"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 2,
                            Name = "Queen Anne"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 2,
                            Name = "Lake City"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            Name = "Beacon Hill"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 0,
                            Name = "Pike Place"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 1,
                            Name = "Columbia City"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRooms", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithMany()
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
